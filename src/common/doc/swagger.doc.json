{"openapi":"3.0.0","paths":{"/users":{"delete":{"operationId":"UsersController_deleteUser","parameters":[],"responses":{"200":{"description":"User deleted successfully"},"400":{"description":"Bad Request"},"401":{"description":"Unauthorized"}},"security":[{"refresh-token":[]},{"access-token":[]}],"summary":"Delete user by email","tags":["Users"]},"get":{"operationId":"UsersController_publicFindUsers","parameters":[{"name":"email","required":false,"in":"query","description":"User email for search","schema":{"example":"user@example.com","type":"string"}},{"name":"name","required":false,"in":"query","description":"User name for search","schema":{"example":"John Doe","type":"string"}},{"name":"id","required":false,"in":"query","description":"User ID for search","schema":{"example":"550e8400-e29b-41d4-a716-446655440000","type":"string"}}],"responses":{"200":{"description":"Users found successfully"},"400":{"description":"Bad Request"},"401":{"description":"Unauthorized"}},"security":[{"refresh-token":[]},{"access-token":[]}],"summary":"Find users by query","tags":["Users"]}},"/auth/register":{"post":{"operationId":"AuthController_register","parameters":[],"requestBody":{"required":true,"description":"User registration data","content":{"application/json":{"schema":{"$ref":"#/components/schemas/CreateUserDto"}}}},"responses":{"201":{"description":"User successfully registered."},"400":{"description":"Invalid input data."}},"summary":"Register a new user","tags":["Auth"]}},"/auth/login":{"post":{"operationId":"AuthController_login","parameters":[],"requestBody":{"required":true,"description":"User login credentials","content":{"application/json":{"schema":{"$ref":"#/components/schemas/LoginDto"}}}},"responses":{"200":{"description":"User successfully logged in, tokens in response/cookies.","content":{"application/json":{"schema":{"properties":{"accessToken":{"type":"string","description":"JWT Access Token"}}}}}},"401":{"description":"Invalid credentials."}},"summary":"Log in a user and get tokens","tags":["Auth"]}},"/auth/logout":{"post":{"operationId":"AuthController_logout","parameters":[],"responses":{"200":{"description":"User successfully logged out."},"401":{"description":"Unauthorized access."}},"security":[{"access-token":[]}],"summary":"Log out a user","tags":["Auth"]}},"/auth/refresh":{"post":{"operationId":"AuthController_refreshTokens","parameters":[],"responses":{"200":{"description":"Access token successfully refreshed.","content":{"application/json":{"schema":{"properties":{"accessToken":{"type":"string","description":"New JWT Access Token"}}}}}},"401":{"description":"Invalid or expired refresh token."}},"security":[{"refreshToken":[]}],"summary":"Refresh access token using refresh token","tags":["Auth"]}},"/mails/resend-confirmation":{"post":{"operationId":"MailsController_resendConfirmation","parameters":[],"requestBody":{"required":true,"content":{"application/json":{"schema":{"$ref":"#/components/schemas/ResendConfirmationDto"}}}},"responses":{"200":{"description":"Confirmation email has been resent"}},"summary":"Resend confirmation email","tags":["Mails"]}},"/mails/verify-account":{"get":{"operationId":"MailsController_verifyAccount","parameters":[{"name":"token","required":true,"in":"query","schema":{"type":"string"}}],"responses":{"200":{"description":"Account successfully verified"}},"summary":"Verify account by token","tags":["Mails"]}},"/mails/forgot-password":{"post":{"operationId":"MailsController_forgotPassword","parameters":[],"requestBody":{"required":true,"content":{"application/json":{"schema":{"$ref":"#/components/schemas/ForgotPasswordDto"}}}},"responses":{"200":{"description":"If account exists, reset instructions were sent"}},"summary":"Send password reset email","tags":["Mails"]}},"/mails/reset-password":{"put":{"operationId":"MailsController_resetPassword","parameters":[{"name":"token","required":true,"in":"query","schema":{"type":"string"}}],"requestBody":{"required":true,"content":{"application/json":{"schema":{"$ref":"#/components/schemas/ResetPasswordDto"}}}},"responses":{"200":{"description":"Password successfully changed"}},"summary":"Reset password by token","tags":["Mails"]}},"/friendship":{"post":{"operationId":"FriendshipController_sendRequest","parameters":[],"requestBody":{"required":true,"content":{"application/json":{"schema":{"$ref":"#/components/schemas/SendFriendRequestDto"}}}},"responses":{"201":{"description":"Friend request created"}},"security":[{"access-token":[]}],"summary":"Send a friend request","tags":["Friendship"]},"get":{"operationId":"FriendshipController_getIncomingRequests","parameters":[],"responses":{"200":{"description":"List of incoming friend requests"}},"security":[{"access-token":[]}],"summary":"Get incoming friend requests","tags":["Friendship"]}},"/friendship/{friendshipId}":{"patch":{"operationId":"FriendshipController_updateStatus","parameters":[{"name":"friendshipId","required":true,"in":"path","schema":{"type":"string"}}],"requestBody":{"required":true,"content":{"application/json":{"schema":{"$ref":"#/components/schemas/UpdateFriendshipStatusDto"}}}},"responses":{"200":{"description":"Friendship status updated"}},"security":[{"access-token":[]}],"summary":"Update friendship status (accept/reject)","tags":["Friendship"]},"delete":{"operationId":"FriendshipController_deleteFriend","parameters":[{"name":"friendshipId","required":true,"in":"path","schema":{"type":"string"}}],"responses":{"200":{"description":"Friendship deleted"}},"security":[{"access-token":[]}],"summary":"Delete a friendship","tags":["Friendship"]}},"/friendship/list":{"get":{"operationId":"FriendshipController_getFriendList","parameters":[],"responses":{"200":{"description":"List of friends"}},"security":[{"access-token":[]}],"summary":"Get friend list","tags":["Friendship"]}},"/chat/history":{"get":{"operationId":"ChatController_getChatHistory","parameters":[{"name":"userId","required":true,"in":"query","description":"ID of the user requesting the chat history","schema":{"example":"user123","type":"string"}},{"name":"secondUserId","required":true,"in":"query","description":"ID of the second user in the chat","schema":{"example":"user456","type":"string"}},{"name":"limit","required":true,"in":"query","description":"Number of messages to retrieve (1-100)","schema":{"minimum":1,"maximum":100,"example":20,"type":"number"}},{"name":"cursor","required":false,"in":"query","description":"Cursor for pagination, used to fetch messages after a specific point","schema":{"$ref":"#/components/schemas/Object"}},{"name":"cursor[createAt]","required":false,"in":"query","description":"Optional: Creation date of the message to start fetching from (for pagination)","schema":{"format":"date-time","example":"2023-10-27T10:00:00Z","type":"string"}},{"name":"cursor[id]","required":false,"in":"query","description":"Optional: ID of the message to start fetching from (for pagination)","schema":{"example":"message789","type":"string"}}],"responses":{"200":{"description":"Successfully retrieved chat history.","content":{"application/json":{"schema":{"type":"array","items":{"$ref":"#/components/schemas/HistoryDto"}}}}},"400":{"description":"Invalid input parameters."},"401":{"description":"Unauthorized access."}},"security":[{"access-token":[]}],"summary":"Get chat history between two users","tags":["Chat"]}}},"info":{"title":"Realtime chat app","description":"","version":"1.0.0","contact":{}},"tags":[],"servers":[],"components":{"securitySchemes":{"access-token":{"scheme":"bearer","bearerFormat":"JWT","type":"http","description":"Enter a JWT token in the format: **Bearer <token>**"},"cookie":{"type":"apiKey","in":"cookie","name":"refresh-token","description":"Refresh token to get a new access token"}},"schemas":{"CreateUserDto":{"type":"object","properties":{"email":{"type":"string","description":"User email address","example":"user@example.com","format":"email"},"name":{"type":"string","description":"Full name of the user","example":"John Doe","minLength":2},"password":{"type":"string","description":"User password","example":"P@ssw0rd123","minLength":8,"pattern":"^(?=.*[A-Za-z])(?=.*\\d)(?=.*[^\\w\\s]).{8,}$"}},"required":["email","name","password"]},"LoginDto":{"type":"object","properties":{"email":{"type":"string","description":"User email address","example":"user@example.com","format":"email"},"password":{"type":"string","description":"User password","example":"P@ssw0rd123","minLength":8,"pattern":"^(?=.*[A-Za-z])(?=.*\\d)(?=.*[^\\w\\s]).{8,}$"}},"required":["email","password"]},"ResendConfirmationDto":{"type":"object","properties":{"email":{"type":"string","description":"User email address","example":"user@example.com","format":"email"}},"required":["email"]},"ForgotPasswordDto":{"type":"object","properties":{"email":{"type":"string","description":"User email address","example":"user@example.com"}},"required":["email"]},"ResetPasswordDto":{"type":"object","properties":{"password":{"type":"string","description":"New password","example":"NewSecurePassword123!","pattern":"/^(?=.*[A-Za-z])(?=.*\\d)(?=.*[^\\w\\s]).{8,}$/","minLength":8}},"required":["password"]},"SendFriendRequestDto":{"type":"object","properties":{"userId":{"type":"string","description":"User Id","example":"550e8400-e29b-41d4-a716-446655440000"}},"required":["userId"]},"UpdateFriendshipStatusDto":{"type":"object","properties":{"type":{"type":"string","enum":["ACCEPTED","REJECTED"],"description":"action type"}},"required":["type"]},"Object":{"type":"object","properties":{}},"HistoryDto":{"type":"object","properties":{"userId":{"type":"string","description":"ID of the user requesting the chat history","example":"user123"},"secondUserId":{"type":"string","description":"ID of the second user in the chat","example":"user456"},"limit":{"type":"number","description":"Number of messages to retrieve","example":20,"minimum":1,"maximum":100},"cursor":{"type":"object","description":"Cursor for pagination, used to fetch messages after a specific point"}},"required":["userId","secondUserId","limit"]}}}}