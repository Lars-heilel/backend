services:
    postgres:
        image: postgres:17-alpine
        environment:
            POSTGRES_USER: ${POSTGRES_USER}
            POSTGRES_PASSWORD: ${POSTGRES_PASSWORD}
            POSTGRES_DB: ${POSTGRES_DB}
        volumes:
            - postgres_data:/var/lib/postgresql/data
        ports:
            - '5432:5432'
        networks:
            - app_network
        healthcheck:
            test: ['CMD-SHELL', 'pg_isready -U ${POSTGRES_USER} -d ${POSTGRES_DB}']
            interval: 5s
            timeout: 5s
            retries: 5
        restart: unless-stopped

    redis:
        image: redis:latest
        container_name: redis
        ports:
            - '6379:6379'
        volumes:
            - redis_data:/data
        networks:
            - app_network
        healthcheck:
            test: ['CMD', 'redis-cli', 'ping']
            interval: 5s
            timeout: 5s
            retries: 5
        restart: unless-stopped
    backend:
        build:
            context: .
            dockerfile: Dockerfile
        ports:
            - "${PORT}:${PORT}"
        env_file:
            - .env

        command: sh -c "npx prisma migrate deploy && node dist/src/main.js"
        networks:
            - app_network
        depends_on:
            postgres:
                condition: service_healthy
            redis:
                condition: service_healthy
        container_name: backend-prod
        restart: unless-stopped

volumes:
    postgres_data:
    redis_data:

networks:
    app_network: